heat_template_version: 2014-10-16

description: A template to deploy a web server

parameters:
  key_name:
    type: string
    description: Name of an existing key pair to use for the server
    default: inf4410-tp1
  flavor:
    type: string
    description: Flavor utilisee par les serveurs
    default: INF4410-mini
  image:
    type: string
    description: Image utilisee pour les serveurs
    default: INF4410-Ubuntu-trusty-mini
  admin_pass:
    type: string
    description: Admin password
    hidden: true
    constraints:
      - length: { min: 6, max: 8 }
        description: Password length must be between 6 and 8 characters
      - allowed_pattern: "[a-zA-Z0-9]+"
        description: Password must consist of characters and numbers only
      - allowed_pattern: "[A-Z]+[a-zA-Z0-9]*"
        description: Password must start with an uppercase character
  network:
    type: string
    description: Reseau serveur
    default: inf4410-net
  server_script_url:
    type: string
    description: Script a etre execute sur les serveurs
    default: https://raw.githubusercontent.com/houssemmh/INF4410-TP3/master/server.py
  server_script_name:
    type: string
    description: Nom du script
    default: server.py
  external_network_id:
    type: string
    description: UUID of a Neutron external network
    default: 0c3b1354-d3d5-4fec-86d3-19d4d1f13785

resources:
  server:
    type: OS::Nova::Server
    properties:
      key_name: { get_param: key_name }
      image: { get_param: image }
      flavor: { get_param: flavor }
      admin_pass: { get_param: admin_pass }
      networks:
        - network: { get_param: network }
      user_data_format: RAW
      user_data:
        str_replace:
          template: |
            #!/bin/bash
            wget $script_url -O $script_name
            python $script_name
          params:
            $script_url: { get_param: server_script_url }
            $script_name: { get_param: server_script_name }
  floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network_id: { get_param: external_network_id }

outputs:
  server_networks:
    description: The networks of the deployed server
    value: { get_attr: [server, networks] }
  instance_ip:
    description: The IP address of the deployed instance
    value: { get_attr: [floating_ip, floating_ip_address] }
